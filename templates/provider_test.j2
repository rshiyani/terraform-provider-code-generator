{% import './helpers/schema.j2' as schemaHelper %}
package {{provider_name | lower}}

import (
	{% for import in imports_for_test %}
    "{{ import }}"
    {% endfor %}
)

var testAccProviders map[string]*schema.Provider
var testAccProvider *schema.Provider

func init() {
	testAccProvider = Provider()
	testAccProviders = map[string]*schema.Provider{
		"{{provider_name | lower}}": testAccProvider,
	}
}

func TestProvider(t *testing.T) {
	if err := Provider().InternalValidate(); err != nil {
		t.Fatalf("err: %s", err)
	}
}

func TestProvider_impl(t *testing.T) {
	var _ *schema.Provider = Provider()
}

func testAccPreCheck(t *testing.T) {
    {% for schema in schemas %}
        {% if schema.default_func is true and schema.envvar is defined%}
            if v := os.Getenv("{{schema.envvar}}"); v == "" {
                t.Fatal("{{schema.envvar}} env variable must be set for acceptance tests")
            }
        {% endif %}
    {% endfor %}
}

var providerFactories = map[string]func() (*schema.Provider, error){
	"{{provider_name | lower}}": func() (*schema.Provider, error) {
		return testAccProvider, nil
	},
}